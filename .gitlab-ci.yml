image: registry.gitlab.com/technic93/e2designer:latest

# To run tests with local image use
# gitlab-runner exec docker --docker-pull-policy="if-not-present" <command>

format:
  stage: build
  before_script:
    - apt-get update && apt-get -y install clang-format git
  script:
    - clang-format -style=file -i
      $(find . -type d -path './Qt-Color-Widgets' -prune -iname '*.hpp' -o -iname '*.cpp')
    - git diff --exit-code
  allow_failure: true

before_script:
  # disable grep and exec part of the script
  - sed -i '/^TEST/d' /opt/qt511/bin/qt511-env.sh
  - . /opt/qt511/bin/qt511-env.sh
  - which qmake
  - qmake --version
  - g++ --version
  - mkdir -p ccache
  - export CCACHE_BASEDIR=${PWD}
  - export CCACHE_DIR=${PWD}/ccache
  - env

build:
  stage: build
  script:
    - mkdir -p build
    - pushd build
    - qmake .. "QMAKE_CXX = ccache g++"
    - make
    - make -C app INSTALL_ROOT=$(pwd)/appdir install
    - find appdir
    - curl -fsSL -o linuxdeployqt https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage
    - chmod a+x linuxdeployqt
    - ./linuxdeployqt appdir/usr/share/applications/e2designer.desktop -appimage
  artifacts:
    paths:
      - build/*.AppImage
  cache:
    paths:
      - ccache/

test:
  stage: test
  script:
  - mkdir -p build && cd build
  - qmake .. "QMAKE_CXX = ccache g++"
  - make
  - make check
  cache:
    paths:
      - ccache/

deploy-AppImage:
  stage: deploy
  script:
    - export VERSION=$(git describe)
    - curl -T build/e2designer-x86_64.AppImage -u technic:$BINTRAY_API_KEY https://api.bintray.com/content/technic/e2designer/e2designer/$VERSION/e2designer-$VERSION-x86_64.AppImage
